<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.1008.1759                               -->
<workbook original-version='10.5' source-build='10.5.9 (10500.18.1008.1759)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Start' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-1'>
        <calculation class='tableau' formula='-1' />
      </column>
      <column caption='End' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
      </column>
    </datasource>
    <datasource caption='Sample - Superstore  Extract' inline='true' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='hyper.0kgk9dx19bzu8q117zly61hq8c72'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='C:/Users/Rajesh/Documents/My Tableau Repository/Datasources/Sample - Superstore .tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.0kgk9dx19bzu8q117zly61hq8c72' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1523</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3403</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3403</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders$</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1427</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11270</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1725</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1263</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14293</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>18</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>139</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>15416</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>21</ordinal>
            <family>Orders$</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1459</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>22</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>23</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>652</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>24</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>149</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>25</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>751</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%FROM' datatype='real' default-format='p0.00%' name='[Calculation_621215327352598529]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Sales]))/LOOKUP(ZN(SUM([Sales])))'>
          <table-calc ordering-field='' ordering-type='Field' tc-options='Fixed'>
            <address />
          </table-calc>
        </calculation>
      </column>
      <column caption='%fromManual' datatype='real' default-format='p0.00%' name='[Calculation_621215327354523651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Sales]))/LOOKUP(ZN(SUM([Sales])),FIRST()+3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Q3_Absolute%' datatype='real' default-format='p0.00%' name='[Calculation_621215327356514308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Profit]))/LOOKUP(ZN(SUM([Profit])),FIRST()+2)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='%ofTotal1' datatype='real' default-format='p0.00%' name='[Calculation_621215327357800453]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Profit]))/TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='oq_%of_total' datatype='real' default-format='p0.00%' name='[Calculation_621215327359320070]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Quantity ordered new]))/TOTAL(SUM([Quantity ordered new]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='totalOrderQuantity' datatype='real' name='[Calculation_621215327360081927]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([Quantity ordered new]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='window_sum' datatype='real' name='[Calculation_621215327363624972]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Sales]),[Parameters].[Parameter 1],[Parameters].[Parameter 2])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='cummulative%' datatype='real' default-format='p0.00%' name='[Calculation_621215327367249935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Sales]))/TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='cumulative%2' datatype='real' default-format='p0.00%' name='[Calculation_621215327370616848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Profit]))/TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='PreviousValue3' datatype='real' name='[Calculation_621215327372185619]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='PREVIOUS_VALUE(0)+SUM([Sales])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='real' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.534562' measure-ordering='alphabetic' measure-percentage='0.368664' parameter-percentage='0.0967742' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-1'>
          <calculation class='tableau' formula='-1' />
        </column>
        <column caption='End' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sales' inline='true' name='federated.0j9p71s0a61is516ibnnv0gmht3i' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales' name='textscan.0d3hc7x0f2wwb71b64jk40l8pcp6'>
            <connection class='textscan' directory='C:/Users/Rajesh/Desktop' filename='Sales.txt' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0d3hc7x0f2wwb71b64jk40l8pcp6' name='Sales.txt' table='[Sales#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Products' ordinal='0' />
            <column datatype='integer' name='Sales' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Products</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Products]</local-name>
            <parent-name>[Sales.txt]</parent-name>
            <remote-alias>Products</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sales.txt]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='window_sum' datatype='integer' name='[Calculation_621215327361609736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Sales]),-1,1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='window_avg' datatype='real' name='[Calculation_621215327361937417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Sales]),-2,0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='window_min' datatype='integer' name='[Calculation_621215327362408458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MIN(SUM([Sales]),-1,1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='window_sum2' datatype='integer' name='[Calculation_621215327362846731]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='previousValue' datatype='integer' name='[Calculation_621215327371268113]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='PREVIOUS_VALUE(0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='previousValue2' datatype='integer' name='[Calculation_621215327371804690]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='PREVIOUS_VALUE(0)+SUM([Sales])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.223502' measure-ordering='alphabetic' measure-percentage='0.557604' parameter-percentage='0.218894' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='%ofTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='%ofTotal1' datatype='real' default-format='p0.00%' name='[Calculation_621215327357800453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Profit]))/TOTAL(SUM([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327357800453]' derivation='User' name='[usr:Calculation_621215327357800453:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327357800453:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lpooe2072x37z1bnn8ed1rujcf2].[yr:Order Date:ok] / [federated.1lpooe2072x37z1bnn8ed1rujcf2].[qr:Order Date:ok])</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Cumulative_Sum'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:cum:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[pcto:cum:sum:Sales:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='MovCalculations2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-1'>
              <calculation class='tableau' formula='-1' />
            </column>
            <column caption='End' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='window_sum' datatype='real' name='[Calculation_621215327363624972]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([Sales]),[Parameters].[Parameter 1],[Parameters].[Parameter 2])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327363624972]' derivation='User' name='[usr:Calculation_621215327363624972:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327363624972:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Moving Calculations'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales' name='federated.0j9p71s0a61is516ibnnv0gmht3i' />
          </datasources>
          <datasource-dependencies datasource='federated.0j9p71s0a61is516ibnnv0gmht3i'>
            <column caption='window_sum' datatype='integer' name='[Calculation_621215327361609736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([Sales]),-1,1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='window_avg' datatype='real' name='[Calculation_621215327361937417]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Sales]),-2,0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='window_min' datatype='integer' name='[Calculation_621215327362408458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MIN(SUM([Sales]),-1,1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='window_sum2' datatype='integer' name='[Calculation_621215327362846731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327361609736]' derivation='User' name='[usr:Calculation_621215327361609736:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_621215327361937417]' derivation='User' name='[usr:Calculation_621215327361937417:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_621215327362408458]' derivation='User' name='[usr:Calculation_621215327362408458:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_621215327362846731]' derivation='User' name='[usr:Calculation_621215327362846731:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j9p71s0a61is516ibnnv0gmht3i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[usr:Calculation_621215327361937417:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[usr:Calculation_621215327362408458:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[usr:Calculation_621215327361609736:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[usr:Calculation_621215327362846731:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j9p71s0a61is516ibnnv0gmht3i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j9p71s0a61is516ibnnv0gmht3i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j9p71s0a61is516ibnnv0gmht3i].[none:Products:nk]</rows>
        <cols>[federated.0j9p71s0a61is516ibnnv0gmht3i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Task1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='%FROM' datatype='real' default-format='p0.00%' name='[Calculation_621215327352598529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Sales]))/LOOKUP(ZN(SUM([Sales])))'>
                <table-calc ordering-field='' ordering-type='Field' tc-options='Fixed'>
                  <address />
                </table-calc>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcva:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
                <address>
                  <value>2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327352598529]' derivation='User' name='[usr:Calculation_621215327352598529:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Continent]' ordering-type='Field' tc-options='Fixed'>
                <address>
                  <value>&quot;Europe&quot;</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[pcva:sum:Sales:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327352598529:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Australasia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Task2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='%fromManual' datatype='real' default-format='p0.00%' name='[Calculation_621215327354523651]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Sales]))/LOOKUP(ZN(SUM([Sales])),FIRST()+3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_621215327354523651]' derivation='User' name='[usr:Calculation_621215327354523651:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327354523651:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Task3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='Q3_Absolute%' datatype='real' default-format='p0.00%' name='[Calculation_621215327356514308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Profit]))/LOOKUP(ZN(SUM([Profit])),FIRST()+2)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327356514308]' derivation='User' name='[usr:Calculation_621215327356514308:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327356514308:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lpooe2072x37z1bnn8ed1rujcf2].[yr:Order Date:ok] / [federated.1lpooe2072x37z1bnn8ed1rujcf2].[qr:Order Date:ok])</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative%'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='cummulative%' datatype='real' default-format='p0.00%' name='[Calculation_621215327367249935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Sales]))/TOTAL(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_621215327367249935]' derivation='User' name='[usr:Calculation_621215327367249935:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327367249935:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='cumulative%1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='cumulative%2' datatype='real' default-format='p0.00%' name='[Calculation_621215327370616848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Profit]))/TOTAL(SUM([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327370616848]' derivation='User' name='[usr:Calculation_621215327370616848:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327370616848:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lpooe2072x37z1bnn8ed1rujcf2].[yr:Order Date:ok] / [federated.1lpooe2072x37z1bnn8ed1rujcf2].[mn:Order Date:ok])</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='oq_%ofTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='oq_%of_total' datatype='real' default-format='p0.00%' name='[Calculation_621215327359320070]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Quantity ordered new]))/TOTAL(SUM([Quantity ordered new]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='totalOrderQuantity' datatype='real' name='[Calculation_621215327360081927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([Quantity ordered new]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity ordered new]' role='measure' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity ordered new]' derivation='Sum' name='[sum:Quantity ordered new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327359320070]' derivation='User' name='[usr:Calculation_621215327359320070:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_621215327360081927]' derivation='User' name='[usr:Calculation_621215327360081927:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Quantity ordered new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327359320070:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327360081927:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Customer Segment:nk] / [federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Order Priority:nk])</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Customer Segment:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='previousValue'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore  Extract' name='federated.1lpooe2072x37z1bnn8ed1rujcf2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpooe2072x37z1bnn8ed1rujcf2'>
            <column caption='PreviousValue3' datatype='real' name='[Calculation_621215327372185619]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='PREVIOUS_VALUE(0)+SUM([Sales])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327372185619]' derivation='User' name='[usr:Calculation_621215327372185619:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[usr:Calculation_621215327372185619:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lpooe2072x37z1bnn8ed1rujcf2].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lpooe2072x37z1bnn8ed1rujcf2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</rows>
        <cols>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='previous_Value'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales' name='federated.0j9p71s0a61is516ibnnv0gmht3i' />
          </datasources>
          <datasource-dependencies datasource='federated.0j9p71s0a61is516ibnnv0gmht3i'>
            <column caption='previousValue' datatype='integer' name='[Calculation_621215327371268113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='PREVIOUS_VALUE(0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='previousValue2' datatype='integer' name='[Calculation_621215327371804690]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='PREVIOUS_VALUE(0)+SUM([Sales])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_621215327371268113]' derivation='User' name='[usr:Calculation_621215327371268113:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_621215327371804690]' derivation='User' name='[usr:Calculation_621215327371804690:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j9p71s0a61is516ibnnv0gmht3i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[usr:Calculation_621215327371268113:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j9p71s0a61is516ibnnv0gmht3i].[usr:Calculation_621215327371804690:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j9p71s0a61is516ibnnv0gmht3i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j9p71s0a61is516ibnnv0gmht3i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j9p71s0a61is516ibnnv0gmht3i].[none:Products:nk]</rows>
        <cols>[federated.0j9p71s0a61is516ibnnv0gmht3i].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Task1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Europe&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Task2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Task3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[qr:Order Date:ok]</field>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='%ofTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[qr:Order Date:ok]</field>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='oq_%ofTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Customer Segment:nk]</field>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Order Priority:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Moving Calculations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j9p71s0a61is516ibnnv0gmht3i].[none:Products:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='MovCalculations2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cumulative_Sum'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative%1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[qr:Order Date:ok]</field>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='previous_Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j9p71s0a61is516ibnnv0gmht3i].[none:Products:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='previousValue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpooe2072x37z1bnn8ed1rujcf2].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%ofTotal' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='Cumulative_Sum' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='MovCalculations2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2de1hU1f7/X+c7iYLhyUtKkmCmeUtTZlRUGANxTLyl+BMPmJRkYWZ4IxMv
      ECkqXks9BzVUFEk64jcJRc0bI5ICanFExSvgDQi0UC4q812/P2aQAYYBxUud2a/n4XmYWWuv
      9dkz+733Z+1Za7//JoQQSEiYKP/zvAOQkHieSAKQMGkkAUiYNJIAJEwaSQASJo0kAAmTRhKA
      hEkjCUDCpJEEIGHSSAKQMGkkAUiYNJIAJEwaSQASJo0kAAmTRhKAhEkjCUDCpJEEIGHSSAKQ
      MGkkAUiYNJIAJEwaSQASJo0kAAmTRhKAhEkjCUDCpJEEIGHSSAKQMGkkAUiYNJIAJEwaSQAS
      Jo0kAAmTRhKAhEkjCUDCpJEEIGHSSAKQMGkkAUg8IzTcPBjMeJUjCoUCR9V45kWlUlDTZpnh
      eCoCUT+lqCQBSDwbzn/LpNlXGRC2n5SU4+zdPJHXf47n9HMO64Xn3L+EiVBy5SJZbezp06o+
      ABZWPfBa2eM5RyVdASSeEQ06vEn79EiWhieTe69yaTobxw/GubcChaI3zqMC2JdjuB3N5Wj8
      RmjTqN7O77EyqaCsgGi/ETgqFCgUjqjGbyS9NoEJCYlnxB+/bhNzxzoJe7mDeHfiCnHgRqm2
      oDhD/Hr6pigsFUKIEnFq2RBhH3RUW5axSXjIA0S8EEKUpogQVx8RmVUihBCi5HyYGOfgJ/be
      FaJ4r5+Qf7ZD5JcKIUoLxc2kX0VGLWKSUiCJZ0ajru4EbXFn9p2LqFfOYvb7d1i2Yy59GpiR
      t9OfGT6p3CrWVR5SWrWB9GOoc5K5OaIvyx6+2Z6bedCg9evYJK3Cd2YGLv0c6de/O61rEZMk
      AIlnTn3LtgyYO5mjipkc+HUu7W8G8XmaPZv3rqeThYzMcE/crlSz8d9H8c99X9BTVrngY77b
      6UDK4SPExS3g25BX8du+imEtjMcijQEkngmZUfMIjkkju0gD3CP3p4P8XE/BW+2hpKQImr2M
      VX0Z93LTSEzNNtxI+x70ZSdrQn/hlgbQFJGd9jNn8iH/RBxJBTYoRvswf0UAI15K4ddLNccl
      XQEkngnNevbGYkkAHgszKHhQj0atHfBau4BhTYGh3ozcPhtVr+W06unGUOtm8MBAI7KefLLC
      h6+CpjF4YwEP6jWidXcPZi3pTQOu890Xw/k8Q/e+wwxCetUc19+EEOIJ76uExF8GKQWSMGkk
      AUiYNJIAJEyaGgfBKSkpzyIOCYnngjQIljBppBRIwqSRBCBh0kgCkDBpJAGYMPeu/kTweJV2
      CrGjiklrq1+hpbkZR8AIR+105fdWUjYLGXUgCoWiyp/X1uu6TnJJiwllxngV3uGZjx2P0Vjv
      XSDKb5R2OnVvZ94LPshNTS0/hDrPcb27W0yTy4Vc7iO251UqK70kts94VzjI5UIeEF/nriSe
      JEfFgjFBYufpHFEihCgtvCJ2TBshQlIM1c0Qm8aNE6tP5YtSUSKydvoJV7+94q7Bdu+K+IAp
      Ylu29lX8gjFi7rYkkXN+kwjYZGyCsrF4jMeaEjJCTNtxRTuduiRHJK0eJ0aHptfqU6izAO7u
      nibk0zaJTT5yMW333aplHmvF+RJjLcSLALlcSPp41pSK0tJK7xzwN/w9pK0WHguPi/Lq2WKb
      9zSx25ACsreJKRXq6sioSQDG4jFWdk1EjNOtFyijZJ+YWcsDqo4pkIYTxxPp0WcIb9u3J/H4
      CfSvPHm52dCuA+3qG2tDSWBKCoHKukUi8ajIkOlPKS5IJTSmISq5gap5v2H1VmfKq7egR596
      3KyyakvDic376DCyJ1VmK9cpHmNl1rgMyyd8wxm0E01zSf52F40M7khV6iYAzQkSj9jQo3tT
      bN/shsXegxzVKUAdqMBtVTrETtPmhYFqbb7oGc7ly9FMGdwbz/BMQE2gwpOH6WFBKuFlS9t6
      O/PexnQgn/1fjkHlqNA9UWASYWcK6xS6RBkabv2ylkmzfsYxyJ8+DavWKCkuxLJhxQKZ7CpZ
      1ypVLNhH1O/ujH3jacVjuKyF21Jm1f+GQb0UKPp+QOQrnzLd0I4YolbXiepICRHOziEiRQgh
      SuNFgL1zhRwyY5NHxdw/PkDIh4wT4yeEiPicsrwoXgTIPYT26pgttvvYC1XAPpFTIoQoKRAX
      srKFEHki7dQFUVAihBClIn/HZ0I+LkJcq1PwEkKUiPObZogZm34VfxirFh9QJb29FDZThF2q
      WC09dLwISamS/GipMQWqKZ7qykrFpU2+wn+n3hhgk6/wjajNgsg6pkBnjqkpcuxFNwCZnF59
      /kB97IzxjYpexXOpH8rmBvKiwpMkJvdhit8AmtcH6lvStlULoB6lv67lg0G9USh6oVpwFEpL
      MbBoTuIRyIn+km2tZrHIqyuNjFVs9jLZv6bppbc5JCc+4BX91VaFaiLPqRgnf/TkpzbxVF92
      nK0Hu/PRsNZYyID6zenhNZKXdh/G+D0nLXUQwBkO7bnJg9hp9FIoUCj6MTcebu45hFEJWL3B
      60Y/bQOcWMvUzWZ4bztMSkoKKcuHPH7YEjpOsDnhLT5yblJzvt5pCKqzawj95RYa7nE1Zhmb
      mwxEqZdl5MT+Lw3+MYoaViA+ZjzGyl6nU6M9fK/O1o4BNEVkxMSSbP0KzWrR6+OvCMtMJvFm
      P76KX8agsg8iJ4oPB8eQnDmJTraP0WZDO/r0CGLlkp+QzxpAc+5wMbeItvdKKLJoyit/r4+m
      KIPEny8Arz126BLA9XOcPrKCwYolFd5uPzmarV625ER9yLibn7J3SjfAlrGLxhD0yXB6XS2l
      keJ9VoaoeHj8a5LYuLsDI8MrH56ZhHu6serh80lWEbsKaD+Z6K1evJq0CNctnYhcNYymxuJx
      MR6r24KphH4xkYHTrlJcrxGtHbxYOFcvPmPUKlEyQPY2byGftrvSveBssc1bLrx1N4ENjgE8
      NlV6XIX+GEAI8cevYlPZbwf2TmLshnNClF4SER87CXu5vXAaO1dsW/mZgXYknhzZYpvPNLHb
      6MCgrpSK4wvHidVp1YwZnhHSbFCJqmRuZUmKC35uj5/Q1IhGzcpVDZk8Rf4Yt0yfHJIAJEwa
      aS6QhEkjCUDCpJEEIGHS1HgbtKio6FnEISHxXJCuABImjSQACZNGEoCESSMJQMKkkQTwX46m
      OJPEyCV8PtaV4IRKhffzOLs7DP+Jw5kUmWWkld9IWDOVsa79USqV9Hcdy+yYjPLZoZps9i0Y
      g0qppL/rBNaklK8s/i1hDVPHutJfqUTZ35Wxs2PIqHa9bgGnI2czRqVEqVQxfGIE5x/Gep2D
      SycyvKxs2gZO67opOhfD/InDUSnLtltDSo32k1rqLoCiffgrlSiVU4jJr3NrEk+ULLYHLuWU
      1Wi+nOBQpTThGz+ii7szbbo71saaKcnmD6v3WBwVh1qtJi7Kn/a7Agi/oOslKoDol/2JOqQm
      bv0IshctYX8RQAnZf1jx3uIo4tRq1HFR+LffRUDZhpXIjZlH4Nm+LN55CLU6lgg/Jxrryo59
      M4eUTp8RFqtGfWgn3zhdZMHGUwD8nl1MH79wdh7Slq37f3+waMl+anP/ss4CKEo4TIKDDz52
      Jzl2ojZdZhHprcTb6BlH4slgg/viVUxytsXcwIQbhxkbmeNmRzOzGppp0IXBbnZYW2ormll2
      QtnXkjt3Ac6x50B7Jnh3pbEMzKxdmfyP2xxMKAIa0GWwG3bWlphpN6STsi+W2g0rcYHYaEt8
      Zrliay4DzLBsY83LutIeU7/lc9eO2lhl5ti6DqRjoXZVYMu33XFu85J2H2XmtOjXl653iig2
      0Etl6rwm+GTKcezsB+LQsx3HU05S89MobPAIUxPmYVO3riWeC5riHM7uDmFZ2iBGdAfII6/F
      m3TSE1hzeU9eyM6tvCE5Z3cTsiyNQdoNK5J/ltTXXXCyMNyvrOKiYE6H7cbC2a5SrfvcuZzI
      Bv/tNPVyoWkt9qeOa4JPkZTYCruuTbHp2BXzA2p+fqiAAlLWTMC1vxKlsj+uYxdyOB/KrgAP
      89HzEUx008sRF+zntzoFJfF0SCBYqcRp4PusuNiLL74ajA1ASQlFL1pQ4bj9nxe4fq18wXBC
      sBKl00DeX3GRXl98xWBD577Cu5jdPcHCsly+vysTlsaTXemMqrmdyoZpgST1mc0M+/JesyK9
      USpdGOwXw0vvB+PTvRolVaJuAkg9ykG606U10FVOHxI5kaoru7CdFfFdWRSnRq2OIypoMFYG
      mihp0I3P/hnNPrUaddwiev26kI3H6hSVxFPBAX+1GvX+7wkYUMjW6SEkFAANGmBxt6hivv1/
      pVi/+mr5lv5q1Or9fB8wgMKt0wlJqGaEat4Jj4XbdOOFzUy02Mz8H8qvJPcvRjJv6Wl6Bi5n
      /JsVlxXaeIShVh9ib9hHWP08H//IjFpkI3UUwLnkoxT3kdMVQGaHolcBR5PPaQutbWiT/yPB
      M4MI23GSa4060MHANameWT67AscwSKlE6fIp/85+QKm02PfPi5kl1h1d+dy9lC1xN4BmNMs5
      zRm9oy33RBKlVs0rb4ildUdcP3endEscNyq3a9MR63uFvPiSuXZ9gFkz7Ib0pzhddx8oN4bg
      HdbMCPLgzWqX1Mowf6kNfcZP4q3470muxe7UQQDnUO/P5sEef5yUSpTKd5ifANn71ZwDsHAh
      MHY9M1VtKU4JY7qHB2tOVdZkPrsWzeVsjxDtCF4dgU+7x49I4inxn11sSLzM78Xa709TnMnu
      vSdp3vQloAPv9E9nfVgqtzVw//puVn3XGGcHC+A/7NqQyOXfi7VnY00xmbv3crJ5U16q0klX
      BrY5SEh0OsUa4H4eJ2PjadlTm+ef+i6RLu/3o3GVwfwNDkft5uz1O9wH4D55J/cQX9KsVmOA
      x18TnHWS49kOzNkTjKos3cqN5tNRuzmZ9REdShLYq2mHk8qD7qpB2M4aTuz5HKgw/rlHcTE0
      fbk5ZrL75J09zukcePGxg5KoSALBSn/2PHy9R/v/O8Go/W2I9B5L6MM7kqHsCQXa+RAR5oF1
      ynLctrUnbOlgmlpZ0WDnErwC07hdAvVetMF+bCAzXbRfvI37l7gtmoK70w00L3bHM+QrtEVW
      WDXYyRKvQNK0G2JjP5bAmS7aMUNuNJ9+lM3HP0yiCzI6eM9l6Iq5uKnSuStrTOfhc1nsYgHc
      4PyZRNaMUvK1/u618yEi7F1aN77C1zNXk5p1lwc0oHFnFdMWT6U259IaV4RVNxs0N/pTRp0Y
      xp5gld4AKJfoT0dxyGk7q3ukMn/hKtRptymhAY07D2fu4kkoGmUR6T2WjA/U+DtAQcJSPgqK
      4QYtkQ93pWXytzz4UFsm8bzQkLL8E066/pOPOjy9BYu50VNYaRlEsOpRHxPy5HhsAUj8F6NJ
      YE1oQ3wmdX+K63WziPr6F5x8h1F5tPAskQQgYdJIc4EkTBpJABImjSQACZNGei6QhEkjXQEk
      TBpJABImjSQACZNGEoCESSMJQOLRyNyKV2+Fzt9Nh1EvYDWBlTyEPavzCzbWjqaIjCPhBPuO
      wjlQXXlDctNiCJ0xHpV3eK2cYcqouwAK45iuUKBQTCT6T7ImODPcU2vKJ/GEKSDum330mzCw
      wrvqZb5EFcv5fJYnrSpvcv0qV4d/o3X20f1t9TLsnmKsncxt/gSfaInHwk+oYiiqXoZvVDHy
      z2fhWSUA49RZAIXq/cT3m8zkHskkJtXduVEdaOQM8azIDMdT37lSAoCCg4uJ6RyAV9t6Fd5X
      +n9HkHsPmhtaW5x9AzMbo0vua9WOredK1k0ZQGsLAxOYlf58F+ROD4MBGOep+gT/ZbH1YmvK
      Vqo5UZkmmhOs3dqSyV5tHmmCXGFuNi1e+/N+kE/NJ1ib+wVSnojovy4gaeV7OPdWoFD0xnnU
      l+zPzyTcU8G0WEhf5VbuLUzZVeEyl6OnMLi37sycvpHxg53prfMTHhWwjyq+zQCks3H8YL2+
      AthXVrEgiZXv6bXx5X7yQXcFKI89feN4Bjv3RqFQ0Nt5FAH7DPf034uGM6HhWEz3qbD4vTb8
      fiuP2Gm6/N9Rxfh5u7j8JzpLPv6CGIBf4vkJBSFtAE0vHPmS47+AsiaT7vPfsehAd5Yf3kK3
      +ve4c/EsV7HFZWsKrwUqWPtadJU8seDgAha96cXGw0qa14eSTDnTw9zpYGWB7N4vLB81kXWJ
      Kub2qdRXSQPk08Nw72CFhewevywfxcR1iajm9uH8d4s40H05h7d0o/69O1w8e9VAsCU0kE8n
      zL0DVhYy7v2ynFET15Gomkvlrv5ryYzgX0VerHzUox+w9gwnxVP7v6Yom5PbvmTmKmv+PaXb
      Ew7y8aiTALQ+wX4VfIL/eewMfvJOxje0fo22eV/x5dRbDHx7EI5vK+hcw/q1olc9WeqnfOgR
      W88sj53+M/BJvfXw+S9DDK0lrmdG3k5/ZvikcqtSRevX2pL31ZdMvTWQtwc58rais4FldPUw
      y9uJ/wwfUssbMCmP4sTNofy88wG9ovTfjUWxT+v2WNsER2ZhRY/x/6CzVxrX6Wb8YVzPiDoI
      QOcTfHMavWL13j5/iDOTOmFUAg1VLDzwBqcOxHMkPpTJq24xbGUMU4yYLFu98bqeQXI+PwR9
      Tpr9Zvau74SFTGvHecXAdvk/BPF5mj2b966nk4WMzHBP3K6UhbGQA2+c4kD8EeJDJ7Pq1jBW
      xkxBXrEBgj5Pw37zXtZ3skCWGY6nm6Ge/nvpM/dnUubqvaEOxPPKB9XezSknk6h5W2kybjLK
      tpbUv5dL8rdhnO0z+09x8MNT9wm+xrXrGmiWT9reg6QCzgDpanaVvoGLqxcK16G0nqbih3PZ
      ILemYcO/k33+PLc0tvwdTaUHIpVRQkkRNHvZivqye+SmJZKaDZaGamorYlVfxr3cNBL1Kqar
      d1H6hguuXgpch7ZmmuoHzmVTUQAlJRTRjJet6iO7l0taYirZBnsyVYx7Ab87oQfLAtwISr1F
      cb1GdBw6h5Uz39BWzYniw3E3+XTvFLrV0E5moHZ8WEZsLMAQlqcEYhvuiVv5hqzSbsjk6Jpv
      ZDy2AHKOHSG9n1sFt3BavM2Abkv46VgOXrbdcB65gtnDe/GvJl0Z5OfEG1zS1mtQTMqX41iS
      eotizGnSdSzzh2rPCfLRvthNCULVaxbmI9dwxL+Xgd6tGeo9ku2zVfRa3oqebkOxbgYPDNUc
      6s3I7bNR9VpOq55uDNWr2KA4hS/HLdGmNuZN6Dp2PkOtocIvKdZD8R65ndmqXixv1RO3odY0
      M9iTCaEMZOvDm/G2eG1Nwau6uq0G4L9hAP4GinIOH+bvUxZrU+ga2rENTCElsJpCr62kVBuA
      caTp0BLPiUy2LknBxc+Np+hGXCOSACRMGmkukIRJIwlAwqSRBCBh0kg+wRImjXQFkDBpJAFI
      mDSSACRMGkkAJsz96wdZWmZJpBrOtA2nqdZdVJNN/FKd5VV/V8YuPMzDBYAFp9ngq7W5Uo2Z
      TYwhH9SiY4S8q0RZxatVj4RglEql3p83Wi/FGmxagYLTkcweo0KpVKIaPpGI89X0UYk6TIbL
      qvR8eS3tfCIkA7y/BMf4Zk4KnT4P47OOzZAVZ7L7qy/YeOo7fKt42Gk4tfpTIhv5sznOjmay
      YnKu/YE5AEUkrF7MlYHrifvaisLUML4ICKdj+Hi95/NrOBexkZKRY2h3rXLb5dy4fp0hIWo+
      t69U8NCm9U2sLc24f+cM22YEEN4xnPHtgNwY5gWeRbVsJ0G25mjuXOa3ktp9CnVbDwC8Eyw9
      y/+vSQ+mfmvPw7mG5ra4DuzIYkOrWosOseOkKzPC7WimrUwLW3NdWQK7b7zLFH9rzACzrt5M
      eOsjDp0bT7sO2iqajK2EZnsQ9P51pkZUH1FOdj1e7W2goEEXBruVvyyzad2pc1u9EBuNpc+/
      cNXFJLNsg3Ut5ytKKZDJIqOi8+hpwnZbUMV5FCA9jdv9nQ07ruTlQdfOes/4l9Fdbkt2TlmC
      ksuu1RdwndIP4zYYRfyW0xybGpKHqjat+ZxNfR2X6vxVa+ApCSCLSO+y/K3q64RgJd6RGWTE
      zGRUf937mgxiZo99mGPqW2QmBCsZ7R+iy/H64+q7gdNlyaomg5jZY8qtNdekVJ/HShhAw+3U
      DUwLTKLP7BnYGzqOCgvRZOxk6lidna1qDLMjdeOFkmL+58WKG8lkL5B5/ToABftWkazyo2YT
      mN+5nb8Hf13+rxo+kfl79fP8amxaKeSu2V1OLJzIcJXOknfCUuIr+6tWQ50FsMdfWWHgYmyM
      o8+d+CUsuzKM0LgwPGw0nFo9hXXCnfVxatRx3+B4IYjp4XoDjMZ9mLp5H+r9m5nYcAdztvwH
      bW46g0PdlhGr1m2X6s+S/dKPd7XjPhcj57H0dE8Cl4834r4ItHRmxr9+4IBazaGdi7E/vYBv
      UzTQwJz/u1vx89ZoSrG1toaiBELVPZhcKwuklrivVaNWq1GrD7Fz3QRs4uYS+p+y8mpsWgEw
      p5PHQrbpLHk3T7Rg8/wfyDXcUQWe2xigyHo0C3z76i6LF0g+asawoKFYmwG0Zdx7/fl2YzJZ
      47UXXktrG5qZAVgz1LUPSzb+hyzqkXw0lxPZ/8BlVXnb7XLzAGkgXhO5McHssJ5BUL/Gxp/0
      0PFNmibdw8pS+9gRmbktQ1274H3+OnRqBqlp5NJBlwZpOHUiEytXGTd+3EKs+iyxyqUVmlPu
      eYdgtT/VHzYyzFvYMW5URz4+cwO6tCwvemjT+gsfx93Awd2Gjtb3uPziS5hr/VVpZjeE/msi
      OA812i89tzFAi7av1ZATVo9GUwovyHTqbcS7yw/pzhzaP+kuVG04xXeJXXi/poMfoOnbKG+v
      YfXRPO6jtUn9cXcmfXvYgIUDri1/YNXu69xHw+3UMNb/2henDtDSfW2F70Ud4UO7d4JRGzr4
      s6KZv/Qgl+/ozE7zTrJuSzq97FrWYNMKXQe24WBINOlaf1XyTsYS37InhoYzlXmKAsjh+s37
      Wm/YxD0kGX2SSDt69L1PzOYfuX4fuH+RzVsO0Kpvj4fncU3JfTSA5nYqYZHxtOvXm5a0w84e
      dq0PI/W2BtBQnHOWpHN/kkfU/Zm5cZ4ziV8zSlkxhfXWDdRyoz/l3TVl+UcjVH7TeXn3pwxR
      KlG5zeaY/Sy82gFY4PDpTF7bO4FBSifcg3/DbbFXrSxKNSnLeXfGLu3vCTZD+cDuJEvGDkGp
      VDJo3L8o8Fis7cPKigYHl+A13Ek7PnCbzdGOgfjpbFplHbyZO/QKS91UKJVD8F4vmODnQm2G
      xXUwyTP2O4A1GVHT+GTdKe7Vt8F+rDtW+36gaVAYHjbaQe3G1pV+L9BkEDNvDqHHsrjLi7Qf
      NJOvpvbDSqatH5DQmPr3bmvLRgYQ4tNLa5pccJrIxYuIOJbF3Qf1eNGmK6OnL+D97o93V0AC
      IJfoKSuxDAquxeD1cXk2Vqw18ZdwiTQoGImnR1YUX//ihO+wp2hg+kysWGumzoNgif9CbNzx
      fdrnGpkDkyY95T5qwV/iCiAh8bSQfgmWMGkkAUiYNNJjUSRMGukKIGHSSAKQMGkkAUiYNJIA
      JEwaSQD/5WiKMjgSHozvKGeqGGdqbhIXMAJHhYLezu+xMqn6lRT3rv5E8HgVjjqro0lrU3Xr
      Lgo5Ez2P8SrHchuklUnlazKM2pvqk4N65SeM0rOi8ou+XL4ewEg7hWeimVcWm8IR1fiVGNmV
      iojHJkNs8pALudxbbMvWezs+QMg9NomMx2/YYD8B8bWsnrZaDJHLhdw5RKQ8sRj+qmSICN8J
      YsW+K6LwQECVzzBj0zgxbvUpkV8qREnWTuHn6if23jXUzlGxYEyQ2Hk6R5QIIUoLr4gd00aI
      kBQhhLgmforYJy7kF4pSIURp4U2xL8BV+OkayojwFRNW7BNXCg+IAGNfYvEpsXNbkrhaUCKE
      EKKk4D8ibNxoEZouamzn2k8RYt+FfFGoDUDc3BcgXP32CoO7Uok6XwG6dYN1G5OemDtkXW1S
      zxzaAx9Mxh01x848oaBqQB2o+JP6EtviuXIdUwa0pqq76Bli93Vkkk83msigfqthTB93i71q
      Q4uCezEzYi7DOjenPiCzaM2wwR0pLASwxsVzAG2bWCBDa4PkrOzGnTvaVelG7U31adCNYe49
      eNWyPgD1Ld/k7X6WFNyhxnasXTwZ0LYJFtoAsHJW0u3OHWqzLr7OAnjV4yMGHIpi359iHWIm
      yYlFKO3H0ssxj8TkZ2P0qwxMISWwin3zn5w8frN6i856M9Fa9OhDvZuG5q1XXj+cSmhMQ1SV
      zRDv3eHikbVM3/YyH75Tg+mbETRF2aTFfMWi1GGMrslwsWIA3Ll4hLXTt/Hyh+8Y8HurSt3H
      AC/0ZOTIK6z/ztCDWDRcjvbT5XW9cX4vmIM3ddeKMivSgiRW/sMRReD2am1SAa7/vBa/UVpL
      U0fvrYatNnOOcSTdHnk3GZ27dCN93+Fys5fMcDwVEwgMHo/KUYHCcQTB38ew8hNdDjx4CjFl
      lfXtUx1H6OWiagIVnoRfvkz0lMH09gwnk8pXrQJSw/0Y4aizZX1vI+nwCLauz4iSYgotG6Jv
      8INMxtUsI88tQcOtX9YyadbPOAb50+fhxlqLW0VfJ3x3NOajZZORNzTSTLWoCVQo6KV0Z/GF
      vsxbPKzWBnyZ4Z4oFH1x8t1B44+WMbm2AdQiTaoGvdz87l7hpwoQ8XdFhTFAaUqIUDlPEzuy
      SoQQJeJ82DhhPyJUpAshRMYm4SH3EON8fcW2NG3+KIQQ8QFy4bEpo0o/H647LW4WlgpRckos
      G2Ivgo5WjShvu4+Q+2wXeQ/b9xHb88qa2SQ85B+KzRcKRIkoFefXjhbyD9eJ0zklQpReE1u9
      5WJcxDUhRLbY7jNaLErM1+a0+QdEgGqELheNFwHyIWLc+AkiJF6bD1eOOXu7j3R48NUAAAw0
      SURBVLBXBYh9Odp9LriQJbKFEMUZv4rTN3X7aWQfnhrxlccA8SJg2u6KefKlMDEz7FI1DZSI
      85tmiBmbfhV/VNdHaaHIv6AWob6+YtOl0kqF8cbHABW6KhBXT+8UQROCRHyVzoy1UyoK8y8I
      daiv8N10SVSOwBBP5i5Qw/64u/zM5tiK57T0Y2rMRnozolV9oD7txnszMEvNz3qZSb/PluHe
      yaLGOeHW7TtjZSGD+o1p2ugBmio+pYUkJSbT3l6hvfTZ9qDPK8kkJunntNbYtrWkPjLM6r8A
      1u3p3Lw+yKx59VUoLS2FwpMkJl/i35NV9FIo6KX6nNj8LG5ml7VRxKueS/FTavPhyjGcTEym
      zxQ/BjTX7rNl21a0oMzW9V3eVihQ9P2QyJuG9uFZ0oyXs38lTe9KmpOcyINXDBsW5UR/ybZW
      s1jk1bX6pawyC5q0deTjqd05uPX444dW35JXOw9j7lgNYT9ef4QNZVg0aYvjx1PpfnArtYng
      Cd0GlSEfNx42bObEI32p7Wjb5gkthyhUsz9eL31SjGPjTYjfr8bQsM443fDblUJKSvlfeYpv
      xRuvP+oyqTJb15XsPZ5CSko0k9s/clBPmE4MUZ1lTegv3NLAvasxLNvchIFKQ6nDCTYnvMVH
      zk2qnqiu72drTBrX7tzTvr6XS3LsQUqaN3u0cH6JYe2Ri9wq0q37LcogJjaZFi+/VMOG19m/
      NYa0a3fQRnCP3ORYDpY0pzYRPLkFMS2GMPqtd4jcZQe8BkB7eyX3Pw/jf4cFM6IVXNgQxl4b
      JeG2VHRi1KOqTWrtutecOE7iKx+w+cdJDz2KNUmLUPke54RmELUeoja0o2e3uWxYFkOfr4bR
      qv497lxM4lw9R3rUmJA2xK5PD4JWLuEn+SwGNIc7F3Mpavs/tbZ1fbKoCVRMo9xdNFb7/5Dl
      pAQqsR27iDFBnzC811VKGyl4f2UIKt3xr0lahOuWTkSuGkbT6+c4fWQFgxVLKrTefnI0W0e9
      TpPLS5iy8hQZBQ+0bpuDvnhohao2Ym+q1LdJfeUVGuwIZoy/1tC8XqPWOHgtZK4uoOrb8eP1
      JpdZMmUlpzIKeIA5TboO4ouVM3mjNh9R7ZIyQxi4P58eKkbI5Xq/A5SKS9tnCDcneyGX2wun
      sQvEgRu6zCxjk/CQB4gq2VzGTjHjXQchl8uFw4JjBvox9LtAqTi+0FkMWZ1Wsa3S42Khs7NY
      eLy0Sn8ZmzyEXK8R/Ty+9MYBseCDAcJBLhdyuYMY8MFcsSdDCO0YwENsqvQjR8Vxyx/i100z
      xLsOct0+bxDnhBB/xC/Qvufwrpi4IkzMH/0Iv208c0rF8YXjxOq02mTRj0/2Nh8xbXe1I4pn
      gjQdWqIqGjUrVzVk8hT5U1yvK9mkSkg8d6S5QBImjSQACZNGEoCESSPZpEqYNNIVQMKkkQQg
      YdJIApAwaSQBSJg0kgBMlpq9d8vRcPv4GiYO1/nwjplN5Gm9FVBGfII1t4+z5qEXsZ63mEEK
      OB05mzEqJUqliuETtS4vFciK4uP+5T4GWrT+YYZ8DmqiTgIoOB3JbJ1xWn/XsUxdU25s9yTR
      murVboco2qczWptCjOSTUT0PvXfjUKvVxEX5035XAOEXDNTN38WX6/7GhLBYrX/X4r6cDVyC
      1opNzydYfYgof1t2BYSjbSafXV+u428TwojVeYv1PRtYrYdbbsw8As/2ZfHOQ6jVsUT4OdG4
      Qo0C9oUepK+XS8UNb1zn+pCQx3IJenwBFO1nie8umn62lX1qNXFRQQwtPsLRR5m+bYCsSG/j
      buI1hZVwmAQHH3zsTnLsxLO5hZsV6Y3SO5JaSvTPQYMuDHazw1rn+1XmvXvnroG6F85R3H8I
      ds3MABnmtq54uf6N3Dwe+gRPdrXGDBmNu3oz4a2jHDoHcIFzxf0ZYtcMM7TeYq5ervwtN89Q
      J8RGW+IzyxVbcxlghmUba17Wq1EQv5LdHWbh2abS3fucbOq92pLH4fEFcC2Tiw8607On1mPK
      zLINzjPm4PZcPSw0nEw5jp39QBx6tuN4yskntljfGDYeYajDPP6ytnxVvXcr0WMAnX6K4GDe
      fUBDceZutqZ3xsGGGnyCezCg009EHCz3Ftu9NZ3ODgY+qfyzpL7uQrV2v5pTbPzeCh/P1lUm
      6BX9lkPzmgyGq+HxBfBqe7o0OsDakINkFlc9zApSqssZEwhWBlN+ji9/nRCsZGzoBdjjr83l
      9M6qdy7uYakul+w/St8iUw/NKZISW2HXtSk2HbtifkDNzxr9fkbjHzJbm/f2d8V3w26i50/Q
      ehOrPmDtKd0Vo1rv4SwivZUEJxSQsuYDVLq4K161NGTHL2WCLrdWjVnI4Xwg/zALP9DlwkoV
      w6dt5txz/42xOu/dSsi64/uNMykfu6BUOjFyzkUGznHX1jXqEyyju+83OKd8jItSidPIOVwc
      OAd3Q50U3sXs7gkWlo0XKnhFazgXFon5ZG8MuSn9fju/3K5XNZyJ8/eSUcsz3+MLwMKBmd/O
      w/7mOiYMVOE6YT7RZQd5bgzzZp6ky1dRHFIfImpiQ773LcsZq8fBX02ETzt4J1iby1U4q7Zh
      ZMi/2XdoJ1PaxLIl7kbVBlKPcpDudGkNdJXTh0ROpFas0rjPZ6z/8QD7Zys4tSeFv7/3DT8e
      2M+SAb/x/U+p1MZ7+NKWBfzb6gt2Hqrqdqg5tRqfoAs4rojlkPoQO7/2oIM5gBWD50Zo2zwU
      xYcvfMuKHw3swzPFmPeuHgUJhMxPxWXtftTqQ+yY/yZq/6UcK8K4TzAFJITMJ9VlLfvVag7t
      mM+ban+WHqvmQDDvhMfCbcSp1ajjNjPRYjPzf8iFrCi+LfbAuxovMX03ykM71zHBJo655QbD
      RqnTIFhm1Y9JK7YRtzeS+U6/s8XXj6gsKPrlGCd7ufN+18bIkNG431hGt44n6eTj92XZ9g3a
      WJqBrDGNX4JSAwtqzyUfpbiPnK4AMjsUvQo4mnxOvxWsbVpgLgMzswZg2ZY3bM2RYcYr1i14
      UFqK1rM4lxOr/oGLUonSZTzfni3hhn7e2nciwW7tdb60FbmQfBQz96mMa2+ODBnmLWyxsgDq
      lXI6bCLv9leidBrOkmOG9+G58NB7t9TgieVG3BZKh36kNwZwZkzvsxw8CTQr8wkuQ+cT3EIG
      N+LYUjqUj/TGAM5jenP2oIEDwaYj1vcKefElc22KY9YMuyH9KU4/z7FtYSRF++JUdpfHfw8X
      QscaHHfJzFtgN24UHVPPUJvTyxO5DSozb4Gdx2eMbn2Wgz8/r7PaOdT7s3mwx1/3Qb3D/ATI
      3q/mXM0bV8K49/DrbarmoTVxauMXRNb3YnOctr3gdx45qCdLDd67+rR4oxMXfojmjJ6H7574
      UqxaYNQnmBZv0OnCD0SfucN97Yac3BNPqZWhJTBdGdjmICHR6WjtfvM4GRtPy5522H9+oKLf
      cPA7tPOJ0GUIWUTPX8rBy3p9rNtCei87ajMsfnwBHFvLzA2JOmNjDcXph4nPaELXTi2x6GaP
      3fEoNqXeRoOG2/ERfJ/Rj54PnYtvcP2GBu7ncXa3Gv2LVcMXLeHSeS7eBzSa2g9is05yPNuB
      OXv0PqjtvnTNPs7JR7o9Uzfv4XY9+nI/agWb04vRoKE4J5PsIrh3rxiLxi1oZKahODORpEuP
      EtNToAbvXX2fYFn3TwkYcJYV7oNQKpUM8V5f7uFrzCdY1p1PAwZwdoU7g5RKlEO8WV/gwWLt
      hhV9gpHRwXsuQ68sxU2lqysmPIynemwY+oEdJ5eMZYhSiXLQOP6l10dNPP6i+NcVvLX/W6a6
      fcHtEmjQuDOqeaH4dAEYRtDiq8yc647T7RIatHTk/a9not2XriiHrSZojBNhjTuj8u1HOy4/
      bLapixeeP87mY5dN0MWXLWvcahVObnIiFxyG4aD/eTV3xKnr1xxKzqX2DqsyFB8uwnvxIr4Y
      FVHBe7hnLZ4vIev+KaHzVjB36hC+vfuABi0H4b9mFo6jP+KVT6bi8kN92jt50/3xH5z2ZHhZ
      jsccOR4GC3M5cqQRnwR10b2W0XrgHNYPnGO4rUZvMv7r3Yw3UCRrPZA56wdSdUsNp9TpuH7o
      W/4EN5kV/Wasp9+MGmJ38CdM76WZtTMz/uVMTZsZQnKJlKiKCfkESwKQMGn+P9TsrQs4O74/
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Moving Calculations' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='184' name='Task1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='144' name='Task2' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task3' width='192'>
      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
      6NYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='144' name='cumulative%' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='cumulative%1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAa3ElEQVR4nO3d+XNbV5bY8e/bsK/Exl2kRFmidnfbbrvd7nHSk+pJpabyP2apSqWSVGZq
      Mskkbvf02JZka5coStwXkCAWAiD25W35QW015ZZsSS0SV8L9VKlKBEnwgHwH9953l6O4rusi
      SUNKHXQAkjRIMgGkoSYT4DlqtdqgQ5COiUyA5+j1eoMOQTomMgGkoSYTQBpqMgGkoSYTQBpq
      MgGkoSYTQBpq+uEPDg4O6Pf7g4pFGI1GY9AhSMfkmQSIxWKDikM46XR60CFIx+AFXSCX/PoC
      /+eLf6HWMSltPeLLr2/SsxwOClssrOzg4rKzfJc/XL+PLZfTSW+p5yeA26fSMpgfdfndV9f4
      h/97h0mjwu/vrJPffMzV+yv0D3b5/d0sSWuDf1nIH010rsPS0vLRPLck8YMu0FOKlxPjAf7u
      H7f46JdXuFpVmZ0Z4drtKn/z6Tmu7a3RaVWIjYwxOauz8iAPF0ePJEDHdank1llYzjJ55hL9
      4jKlSpPMe+9Dp8J7UzGW91zc+hbFWp9Ll+dZXV1H9wSIjiRJenu0jTTpiOdI4pPebs9vAawG
      /+k//z2f/PW/ZWJiCqexydLqJqPpBM1Gk26njeKJcVDeYX15g/jkm7/4XdfFdV1My6J2UMU2
      26xs7mLrQX75yWWsTp9avY5jdajWmtQaDTrVLDvFOo4/xcXzp2nu51nfqRAPy4tfer4XdIFU
      Lr0/z8qDO2wWTP72b35BVZ/gry6O8WA5y6mETr4T4K8/mKMTOcOvzr/5BHB6Db699jVGMImu
      a+jeEIlYkFA4jKZ5CAY8BNw2V28t4fN70FWNcDyF3+clnYijKjrjIZe2dwRDeePhSe8I5Z3d
      EWZ1uf9wmblzFwgYrzbdUSwW5V2gISFcAjiOM+gQKJVKpFKpQYchHYPnD4IHqN/vDzwJTNOk
      2+0ONAbpeMilENJQEzoBFm5+xddfX6fU6Dx97GB3l9YAY5LeLcJ1gQ7TAyN8cGEOw9BYWbiN
      6c8Q75VZyO8yOT5Hyu+Qy5cIxWOEYmO0awVCusP9xxvMnnsfr92kVCgSGMkwlo5TrdZIJkYG
      /bIkgQidAI3yHgtdi4mowsOdA7xGA38qwdlL77P14CFGwMGJnkRrbVAPjFHc22M6GcZxHB4u
      PmLM12Pk1BWcyjb5fIu2FSKZGPSrkkQidBcompnmg59dJplKETQU4vEEmmaycOM7enjRvSEy
      iRiGYbB46xo7xRqNagVH86KrDr5wgkTYz+j4GI8X1piYkO/+0rOEuw3a7Xaf3gVyXRdFUQAX
      x3kSpqIohx4HePJ513VBUZ589IPPl3aWKPZCXJibeKkYKpUKIyMyWYaB0F2gwxexqirPefzp
      I8889sPPp6fOIKe1pOcRLgG8Xu+gQ8Dj8eD3+wcdhnQMhEuAP393HwxR4pCOltCD4JWFB3Qc
      F9dpc/fBT+wLsNpUap0f/xpJ+gGhE6BTz7KerVPd2mC1UMbud8hub3HQ7NLpdKiWS/R6XXa2
      szQaFTY2d9nJFbAcocb1ksCE6wId5olN06/vkFdsxqMeeq0qt769ihOZYS7poAbH0Ha2IDBC
      IKDRqNfBruIPxkhEBz+WkMQndAuAohGlRo0YhqpQKu1z9vIHxD0KSmCE82dOousqAb8fXVXJ
      TJ5gYjyFYg9+Ran0dhBuHuCwVquFrtj08OJaPYIehY1snmg8jd+vEw4GccwO6+vbjIyN4TX8
      6KqFqnowDO21f67cDzA8hE6AQZEJMDyEGwOYpjnw/QCWZckaAUNCuASwbXvgCeA4DrZtDzQG
      6XgIPQh2XYeDgxo/3kez6LTlcY7S6xE6Aexmju9uPqRpPj8FGtUirV6NpaW9Y45MelcI1wU6
      LLtd5fz5SSrlGsXCMrlmF29kjIhZoWz5mE4o+L1Tgw5TeouJ2wK4Jls7W6wvLbOxvYfmi/Lh
      L36B7nTQfBE+/PASqmMj72FJfwlhWwDX6nHm579mLBEmn9+jltvixo0qp89ewGP10BSFUDyD
      ZvhIZwYdrfS2Em4e4PCGmMOa9Tr+SITXn956eXJDzPAQrgXQNA1V/fOeWewYL0hN09B14X41
      0hEQ7q9sGMagQ0DTNDweeaDuMBB3ECxJx0DoBPjqH/4ru00bq77Nf/gfvxt0ONI7SLgu0GHJ
      6Wn2t7bp0mBiLEKnVuT2/UdExk4SVC1mJtNk99tMj6eQGxil1yF0C6AYETx2lYbrIezRaDVq
      mJbF+vIGAafJwuYumuGXF7/02oROAJ8/QCpioIWShIMBFFVBUXVG4lGSJ+fIr2XJJEODDlN6
      iwk3D/CydtceYoWmOJGJvPHnlvsBhodwY4CXXQo9Njv/Sl//KlzXHfiSbOl4CJcAskCGdJyE
      HgNI0lETOwFcl9yeXOsvHR3hukDPcmk2mpQ9JWKxGJVqE9XpsLOdJT59lrjaZHGjyMUrl1+5
      EqQkgegtAE8qxe/t5bAtk529EqVCibkL52ns73P71k16rSJLG6VBhym9pYRNALvX5N6dG7Qs
      HY/b586dO1QaXVSvn6DPg6GpxKJRvMEE6RF5krP0eoSbB/h+P4DrOpimha4bgINl2aiajqqA
      qipPCma4DqbloBsGmvrm5oPlfoDhIewYQFHUQ0uSNTyeZ7fCPCmYoeI9jh0y0jtLuATwer0M
      ulEyDAOfzzfQGKTjIVwCKIoy8OIUiqI8d1ea9O4R+6/sulSr1WceqhdLyEMLpTdF7ATAJV8o
      0ul0cB2HdqfL/vY29X4Py3Iwe11ZDEP6iwieAE8sLz/CNDssLm0A0G+UWN/dZ2N1BUte/9Jf
      QNgEcCyTaqVEvdVHcW3K+yXq7Sedn8DIOK3SEn01gk+T22Gk1yfcIPgp16JQLDN/fh5P/4D1
      3X3OnZklrLmo/Q5my2bm0vSgo5TecsJNhL0MxzJpdU3CocCRPL/cEDM8hGsBXrZAhsfQjqyI
      hSyQMTyESwBZIEM6TsIOguFJgYxGo/kTBTIk6fUJnQB2a49r1++9sEDGi7jdEtmS3NIo/TTh
      ukCH7WxXmD8/SbVcZ6+0w8zFOVYebOJXW+xUGgTiGfyuzskTMXLVFsXVJYhNkPFWuLsJ3l9/
      QDoil0pLLyZuArgmm9kttKIXOzhFWjOxzB6tThclFOCTj0+xsLCF6UK/26ZrKmTGR8nX26RP
      nuBsMEYqLBe0ST9O2C6Qa/Y4/f5nfPZXv+G98TDpdJh7d5eJJZNEDJNr12/TV4LEAj0eb5WJ
      RUPYpoXXH8YbTtHeW2S/IbtB0o8Tbh7gRQUy/sSlsLXKVqnJ+UuXCXrefA7LDTHDQ7gEEKFQ
      drlcJpFIDDQG6XgINwYQoUCGrut4vd5BhyEdA2HHAJJ0HMRNALfP7atf8c+//wPZ/cZzv8Ts
      dKi1Wj/6NHa3xXo2dxQRSu8A4bpAT7k2fVthYuYUY3Efj+/eoGJ5uXRunPvXF7F8YUb9XRZ2
      9vno408pbyzR9yeZG/Px6OEGtm6gmD1OXbxMdvUBu1tbXLx8ie3l+/SNEU6kw+TyOTIz5xiN
      Hc2iOkl8wg2Cn3JdrH6H3c01OlafO48LJMMBLnx0kmYpQMTcoh6dwaNbRPsFvriTJxoIcvr8
      GAE9Q2FvlfnxAI+bCXSnznTc5tb9Egf1KsFwkMl0Ek9qnBOp2J8V2JCrQYeHuF0gp8u927dZ
      z1UIpqaYjOh4/QE0xWX5/k0WSg6TMZWNhfvUtQQjPggEgxiGD59XJxiOoHt8+Lwa5ewK1+/u
      cPbiHCG/ji8QwusPk4iGZHWZISduC/ACplmjWtVJp4NH9jNkCzA8hBsDuK77o+cCaVqYZPJo
      CmMcjmHQcxHS8RAuAXq93sAvPlkgY3iIOwaQpGMgdAKUc+tc/eYblrfyPO0VuQ6dzg/enZ0+
      e4Xysccnvf2E6wI95XbZznf46OOPWXzwgN5ojI3HCygeH4+XNzhz8QPGQxbL2SoXLsyxu7nM
      bi7MxUvnKG8tUTYDnJkaoXxwgG1EmUy9+WqS0ttP3ASw+6jeILqm4Td09jYe4584x3gI0Py8
      N5Phzq2bXJyfZvHRFv5IipnRIIu3b7Fb2sfQVcJMs2t6+fhceNCvRhKUuAmgh/D0H3HrVpme
      62F+IsKj9UcwMUm7kmcjF0Zzejx8vIE/PkmrmOVRQyGWHCXa7RKOJQh5dabGJt9o7QDp3SLc
      PMDh/QCOY9Hp9PD4/Ogq9DpdFMOD6lrYroahunRNG7/fh9nrYrsKfp8Xs9/FssHr9YCivnIC
      yP0Aw0PcFgBQVZ1g8E8h+gLfr9nR+X7RdPCP//H6/rT31+P140GSfppwCfCnqjCDIwtkDA/h
      EkCEwhSyQMbwEPqvvLm2hg1UKmXs16gDUK8fYMsVDdKPEK4FOKyaX6LmhKGTIxSK0GzWULwh
      /DqohhfL7KO4FvVWn1g8Sq9Zp2O5GIqL6g1SzG0TjFvE4zE0t0+t2SUWi2P12/QtCIeDcjXo
      kBM6AfwjM9jNLDVHoV5YZynXgW6L9ESCSHKSUnaNg9wmW6UWF3/5KY3NDRSPi+5LYAEjng7F
      Qo7tXBF7f5mNfJ35X/6Wxup1JuY/IRw+uhWl0ttB6C4QKMxMZdjczmOZXaKpccJehUQmTXbh
      Nv70FI4R57Nf/4qxkRCJsROcnJtl7uRp4iEPmifAxEQG1bUw1RCfff45UyMhUlOnmZtOy3d/
      SewWYHxigmAkxK9+5pCcGKW1soQ6fYaRcJzOiVlGMyOktFOs7ZSZSaQYn/Di8SioqgddH8ft
      1VnPFjhzdh61k2J5u8hMPM3k5OSgX5okCOEmwkQgN8QMD+FaANM0B14o27Zt+v3+QGOQjodw
      CSBCgQzbtrEsa6AxSMdD6EHw8v1vufbtTfbrnVcuktHrNKk3O0cSl/TuEK4FeIYvzodnJrj3
      cJnI+dNsb2ZJTM7gd1ps7paYmpmhmN0knJnG5zTJFSoEwyHafRiNaqxv7BEfm2IqHWFrY5NQ
      cgK/7tJuVAknJ/AbQue/dAzETgBA9wbweRTW7t/k8d4B/vwBYxGDsalp8it3ubtWQNsqc2HM
      hy+aZne3SEBT6UbS+EIxeoV17hU1Njd20P0lTmR0AvETjMj6whKCJ0C7ts/qsk3X9TESCDH3
      3jixSJh6cYdarYaqB5g9fYaRaAy1VyORSGOaJh7TxFWg227i9l38ER8zc2dJRKO0OnVOTWdQ
      FJkAkoC3QQ/vB6hVirRNhWQygeaalEoVvOEYQd2hXG0QTyaoV/bR/BFCXh3dMDAtC8V1UTWF
      6n4ZPRglFjDY3y+j+UIEfAZej+dHE0DuBxgeQifAoMgEGB7PdIEODg4Gfv970Bc/PEnCer0+
      6DCkYyBcCyACORM8PF4wCDa5+c9fspo/4Mqn/4bm+lVW8iaf//a3VJa+Ya2T4m8/O8eDm38g
      2xnj331+4Wiic12a7TahoFy1KR2N598Id1VOv/8pn57P8OjhTRY2VX7783G+ubfG9OQE+9UD
      UDRmZsbYL1SPMDyXbHYHx3myNMFxXGzbot/vYzsutuOA62A7DpZl0v/jMgrHtjEtC8dxcV0H
      5zU200jD4fktgKJSXL3Fd1tt/v1vzvHf/9cmwWCQbrdHOJxGUYqgakRCIRQOjjzI/a1Fvrx6
      nxNXfoVeXcG0XXzjF3Aae3wwn+HOuotSfshytsyvf/M5Cw9XmBjP4Kpe0t4u7sgco5HB1x6T
      xPP8FqCzz3/8b/8Pn9pnfV8j1F/iv/zjNeZPZfjnL75g8e533Ftc48vf/Y6HD77l8fb+Gw/M
      dRxsu0+j2aFc7/L+lXO0mnVCyQl++cnP8asqjuPQaTbpdjs4gRHmp2NUGn0mTp3nwvwZPL0a
      m5U+aXnxSy/w/EGw62JaFq7romo6Ki6246LrGpZl4rqgahquY+O6oOk62hveRG73Gty6s8DJ
      8z9Hb+V4vFVmfGaWkAEj0QCVpkOvvMnOQZeJqTnahRXa+BifmELVPYwEDXaX7nAQOc35iegr
      /Ww5CB4e7+5dINtkp7DP2OjoKx+MJRNgeAi3FML6Y8vzJmRSSRzbwrFf7fts28Y0zTcSgyQ2
      IRNg0JNhMgGGh9DrgR3HxrbtZ1oE13VfeW+AJL2I0Alw86sv+O6725SbvaePlVZWqA0wJund
      IlwX6DBFVdE9BrrT5vaN+1hGiDG9x+K33xAKZpiJOCzlakymQwQy81Rzy4zG/DxY3iY1dRpf
      t0C+ZhKNRTlxYoq9vQKzJ6YG/bIkgQjdAoSTE1y6cA7lYJetcpNOp42reLn84cfoThuz3+f0
      xfcJ0KVn2dTrDerVCrZjs7G5Rcd0ufT+FTIhlfWVRZRAatAvSRKM0AkQiUTxej1ExmYZCxn4
      fAF8IYOH167jCSXxh+MEvTqBWJKNB9/Rcw28Pj+6J8BYOk40nsDQVGKZMYrFJlMpeeKz9Czh
      5gGOYj9AMbtK359hMvlypZLkfoDhIdwY4CiOJR898d4rxyCPRx8OwiWACAUydF2XBTKGhHyb
      k4aa0Alw48v/zX7PxekU+bt/uvbjX9yvsrUntzFKr0a4LtBhwXiQ3HqONmW8QY1eY5/b9xZJ
      npgn6rGo7JdIj47y+NEy07NjbKwUyG77+PnPrshDr6SXIvRVovqSaGaJmq0R9+l02i0s2+LR
      wyX2drcYmZgjt73FpQ8/ZjQeIJycYnYiSrvR++knlyRETwBVY8TTp2OMYGgqnXYD01bwewz0
      YJx0LEAyFuC7q9+wW24RCgXRDQNVHnolvSTh5gFEIPcDDA+hWwBJOmrCDYJFOBmu3+/TbrcH
      GoN0PGQLIA01oRPAdfo8erTCi471sS0T2+mQ3zv6o1mkd5NwXaDDOsVNqq0ulbaF36pT2K+S
      GJvC4/ao1lp4tD5GNEQ+32B0LDbocKW3kMAJ4LJRaHNmKkG5XEGr5TBSKVaWl/H2a/jG5nBa
      ZdzQy63wlKTnETYBXKvNfmmfRqdF1w0xGXIxuz1QNYKxDNNTGQoruUGHKb3lhJsH+P4ukGub
      dCwIeA3a7RZ7aysQSzKeGUWxLbx+H2a3hWJ46XdtgkHvG4tB7gcYHsImwA85joOiqhzHHK9M
      gOEhXBfIMAZ/jqeu63i9b65FkcQlXAJomjboEFBVVYg4pKMn9DxAaW8P0wVck91cadDhSO8g
      oRNg8+FVNopd2nvrfHl78cmpcIf+8f3/Bx2o9NYSrgt0WGj8NN3COluqycl0kHZlh3/63df4
      x84yHlJ47/QUm4UuZ09NDDpU6S0ldAugKAZB6tTdMB5NpXJQZ27+PLSanJwMc/3OKol06lju
      DEnvJqFbgFQqhU+NEySE2w8QC6jsLKxx6r2TaIEghl4hGRr8KRLS20u4eYCXtb+3jREbJ+p/
      8zksN8QMD+FagJctkBFNjgHukZzjL+sDDA8hE2DQG2JkAgwPoQfBknTUxE4A12F5ZXXQUUjv
      MOG6QH/GddnYWGNqcoKNbAnDrFIo1/CnTpHU62zlq8yevcJo3D/oSKW3kLAtwPezvaZl0Wo1
      sW2LeqNFz/Xywccf4bW7PH70EMsyabQ6gw5XeksJmwBOr8mtG9fxhJMkgh5u3b6HoxkEQ0E0
      VSUYCjA7M4uiGvh9g19BKr2dhJsHEOFYFLkfYHgINwYQoTCFoihCxCEdPeESQIQCGYZhyAIZ
      Q0K+zUlDTewEcF22s9lnHtpbXqE5oHCkd4/YCYBLq9WmUNjDtvrk8vt06nUOahUa7T71coG2
      JdQYXnrLCJ4AT06DyOf3sG2TXP7JtkifARvbObK5Il5d7gaQXp+wCWB16ly/+gfathcfPb65
      eo1SowsoaIE4enMNNTyJ3Lou/SWEuwv0Pd0f4eNP/9UfPzrJmUOfM9sHHPQjfDgTH0Ro0jtE
      uIkwEcgNMcNDuBag1+th2/ZAY5AFMoaHcGMA2SBJx0m4BDjMdUyWl9ZeWCDjhd/nOtiv+k3S
      UBKuC3RYt7RBqdYh0bHwOz18IT+dZhdDs9krVIglU+go+Hw6fcuh2yjTsgz8Vo6FnI+fXZ4l
      7Bv80gpJXEK3AJvFLudPJqmWq2ytrGLSZ3VlnbWVVdAsVlfXWF3Zptc6YDuX4853tyjXWmi6
      jsfjRVOEfnmSAIS9Qly7RSGfZ+HxKtlsDlyTvZ1d6l0LxwVNAcdRsPtNcrs5erbK/PlzVAub
      4IuiODbyxCzppwh3G/RPBTL6tPoQ8ntoNZtoWOQrTaLRKNXtRe6u5Th9/hOm41DruiQScToH
      JbqKn/FMnPz2DuHMOOHX2Cwj9wMMD2ET4MVczH4f03Lw+X2oypt/m5cJMDyEGwQbhvGTt0I9
      nqMtXqHruhD7EqSjJ1wCiFCYQlVVdF24X410BIQdBAO0avtsbe/SNV9/Zth1bLq93huMSnqX
      iJsAdpMHDzdwzA71Vve5X9Kt1dirVH70aZxeh+294lFEKL0DxG3nVT9ho0+2cMCVTJIv/v5/
      UrG8fP6vz3PnD49xdI3J0QAruX3ev3KZxRs36HmTfHQpzdJijla/Q8SA8YufsLu6QHZlkdkz
      F1i6e52+HufC3BjZfJGzlz5kNBYY9KuVBkS4u0BPOSa1lonWLrCeL7KS7XBmKkV6NkqjFEBv
      rOJmZrFsk4Rb5upyixOpGKG0j4gnQ6G4xXzGYKEWx3AbZHwtFjdatLp9xkfjeBWN+MwsCf+f
      D3blatDhIW4XCChuPuLeRoWZ965wcTpIrWtiKC5L925Q9aWZSoZo7G7QDUwzGXFo2xALxfD7
      dZKJBPjipGN+euUdlvIKH3x4kdGISqsH8VSKoDH4Abc0WOK2AC9g2106HZXQEVaGkS3A8BBu
      DPDTBTI0vF6O9Px+x3FkfYAhIWQCDPpoRMuyZAIMCaHHAJJ01AROAJfVBzf46quvuHbnEc73
      3SLXprT/g3v/doeV9Z3jD1F66wnXBXrKbtJSEnz22UmWFx5QOyixtLhMKBxieW2Ls5c+xN8v
      kCu3OXl2nnJuneLeFnPzF6nurlI3Dc5MJlnN5UmNn2Q6HR30K5IEJG4CKBrYFo7rYrkuB3u7
      nLj8MRmfjeGP8N7JUe7ezfPxLy5w/0GWWOYEs+MRFh88YLdaJxyO0qrr+NOzTKXkxS89n7hd
      IDVAKmxy9etvMD1RRicn2bh7ndVcFbtR5NFGnrDhcu36fVJTk/QOcty4+4jJMxfIxEJ4vH68
      /hCJaJAjWDEtvSOEmweQBTKk4/T/AbnHJub/FWgQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='oq_%ofTotal' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='previousValue' width='192'>
      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
      HAAyRs3/A9ux01XIyGJdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='previous_Value' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
